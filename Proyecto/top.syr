Release 14.7 - xst P.20131013 (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.08 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.08 secs
 
--> Reading design: top.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "top.prj"
Input Format                       : mixed
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "top"
Output Format                      : NGC
Target Device                      : xc3s100e-5-cp132

---- Source Options
Top Module Name                    : top
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Mux Style                          : Auto
Decoder Extraction                 : YES
Priority Encoder Extraction        : Yes
Shift Register Extraction          : YES
Logical Shifter Extraction         : YES
XOR Collapsing                     : YES
ROM Style                          : Auto
Mux Extraction                     : Yes
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Multiplier Style                   : Auto
Automatic Register Balancing       : No

---- Target Options
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 24
Register Duplication               : YES
Slice Packing                      : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Yes
Use Synchronous Set                : Yes
Use Synchronous Reset              : Yes
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
Verilog 2001                       : YES
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

---- Other Options
Cores Search Directories           : {"ipcore_dir"  }

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "ToTwosComplement.v" in library work
Compiling verilog file "StaticCounter.v" in library work
Module <ToTwosComplement> compiled
Compiling verilog file "ipcore_dir/snake_mem.v" in library work
Module <StaticCounter> compiled
Compiling verilog file "FromTwosComplement.v" in library work
Module <snake_mem> compiled
Compiling verilog file "font_rom.v" in library work
Module <FromTwosComplement> compiled
Compiling verilog file "snake.v" in library work
Module <font_rom> compiled
Compiling verilog file "ipcore_dir/screen_mem_i.v" in library work
Module <snake> compiled
Compiling verilog file "FontPrint.v" in library work
Module <screen_mem_i> compiled
Compiling verilog file "coin.v" in library work
Module <FontPrint> compiled
Compiling verilog file "BoothsDiv.v" in library work
Module <coin> compiled
Compiling verilog file "Sync.v" in library work
Module <BoothsDiv> compiled
Compiling verilog file "snake_game.v" in library work
Module <Sync> compiled
Compiling verilog file "score_print.v" in library work
Module <snake_game> compiled
Compiling verilog file "ps2_rx.v" in library work
Module <score_print> compiled
Compiling verilog file "key_to_move.v" in library work
Module <ps2_rx> compiled
Compiling verilog file "ClockRatio.v" in library work
Module <key_to_move> compiled
Compiling verilog file "top.v" in library work
Module <ClockRatio> compiled
Module <top> compiled
No errors in compilation
Analysis of file <"top.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <top> in library <work> with parameters.
	bg_box_color = "10010010"
	bg_color = "01001001"
	bg_color_paused = "01001011"
	coin_color = "00111101"
	fpgaClk = "00000010111110101111000010000000"
	gameClk = "00000000000000000000000000001010"
	game_pos_x = "00000000000000000000000001000000"
	game_pos_y = "00000000000000000000000001000000"
	game_scale_x = "00000000000000000000000000001000"
	game_scale_y = "00000000000000000000000000001000"
	game_size_x = "00000000000000000000000001000000"
	game_size_y = "00000000000000000000000000100000"
	score_color = "11000001"
	snake_color = "11111111"
	snake_head_color = "11100011"

Analyzing hierarchy for module <ClockRatio> in library <work> with parameters.
	demRatio = "00000000000000000000000000001010"
	numRatio = "00000010111110101111000010000000"
	numSize = "00000000000000000000000000011011"

Analyzing hierarchy for module <ps2_rx> in library <work> with parameters.
	dps = "01"
	idle = "00"
	load = "10"

Analyzing hierarchy for module <key_to_move> in library <work> with parameters.
	down = "00000000000000000000000000000011"
	left = "00000000000000000000000000000010"
	right = "00000000000000000000000000000000"
	up = "00000000000000000000000000000001"

Analyzing hierarchy for module <Sync> in library <work> with parameters.
	BP_h = "00000000000000000000000010010000"
	BP_v = "00000000000000000000000000100001"
	FP_h = "00000000000000000000001100010000"
	FP_v = "00000000000000000000001000000001"
	h_px = "00000000000000000000001100100000"
	v_ln = "00000000000000000000001000001100"

Analyzing hierarchy for module <snake_game> in library <work> with parameters.
	H = "00000000000000000000000001000000"
	V = "00000000000000000000000000100000"
	addrBits = "00000000000000000000000000001011"
	bg_color = "10010010"
	bg_index = "00000000000000000000000000000000"
	coin_color = "00111101"
	coin_index = "00000000000000000000000000000010"
	pos_x = "00000000000000000000000001000000"
	pos_y = "00000000000000000000000001000000"
	scale_x = "00000000000000000000000000001000"
	scale_y = "00000000000000000000000000001000"
	snake_color = "11111111"
	snake_head_color = "11100011"
	snake_head_index = "00000000000000000000000000000011"
	snake_index = "00000000000000000000000000000001"
	xBits = "00000000000000000000000000000110"
	yBits = "00000000000000000000000000000101"

Analyzing hierarchy for module <score_print> in library <work> with parameters.
	H = "00000000000000000000000001000000"
	V = "00000000000000000000000000100000"
	score_bits = "00000000000000000000000000001011"
	size = "00000000000000000000000000000100"
	spacing = "00000000000000000000000000000001"
	width = "00000000000000000000000000001000"

Analyzing hierarchy for module <snake> in library <work> with parameters.
	H = "00000000000000000000000001000000"
	V = "00000000000000000000000000100000"
	addrBits = "00000000000000000000000000001011"
	down = "00000000000000000000000000000011"
	h_index = "00000000000000000000000000000011"
	left = "00000000000000000000000000000010"
	right = "00000000000000000000000000000000"
	up = "00000000000000000000000000000001"
	xBits = "00000000000000000000000000000110"
	yBits = "00000000000000000000000000000101"

Analyzing hierarchy for module <StaticCounter> in library <work> with parameters.
	numLength = "00000000000000000000000000001011"
	upTo = "00000000000000000000011111111111"

Analyzing hierarchy for module <coin> in library <work> with parameters.
	H = "00000000000000000000000001000000"
	V = "00000000000000000000000000100000"

Analyzing hierarchy for module <BoothsDiv> in library <work> with parameters.
	aBits = 12
	bBits = 11
	bits = 12

Analyzing hierarchy for module <FontPrint> in library <work> with parameters.
	posBits = "00000000000000000000000000001010"

Analyzing hierarchy for module <FromTwosComplement> in library <work> with parameters.
	bits = "00000000000000000000000000001100"

Analyzing hierarchy for module <ToTwosComplement> in library <work> with parameters.
	bits = "00000000000000000000000000001100"

Analyzing hierarchy for module <font_rom> in library <work>.


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <top>.
WARNING:Xst:863 - "top.v" line 33: Name conflict (<vsync> and <VSYNC>, renaming vsync as vsync_rnm0).
WARNING:Xst:863 - "top.v" line 92: Name conflict (<VON> and <von>, renaming VON as von_rnm0).
WARNING:Xst:863 - "top.v" line 33: Name conflict (<hsync> and <HSYNC>, renaming hsync as hsync_rnm0).
	Calling function <logb2>.
	Calling function <logb2>.
	bg_box_color = 8'b10010010
	bg_color = 8'b01001001
	bg_color_paused = 8'b01001011
	coin_color = 8'b00111101
	fpgaClk = 32'sb00000010111110101111000010000000
	gameClk = 32'sb00000000000000000000000000001010
	game_pos_x = 32'sb00000000000000000000000001000000
	game_pos_y = 32'sb00000000000000000000000001000000
	game_scale_x = 32'sb00000000000000000000000000001000
	game_scale_y = 32'sb00000000000000000000000000001000
	game_size_x = 32'sb00000000000000000000000001000000
	game_size_y = 32'sb00000000000000000000000000100000
	score_color = 8'b11000001
	snake_color = 8'b11111111
	snake_head_color = 8'b11100011
Module <top> is correct for synthesis.
 
Analyzing module <ClockRatio> in library <work>.
	demRatio = 32'sb00000000000000000000000000001010
	numRatio = 32'sb00000010111110101111000010000000
	numSize = 32'sb00000000000000000000000000011011
Module <ClockRatio> is correct for synthesis.
 
Analyzing module <ps2_rx> in library <work>.
	dps = 2'b01
	idle = 2'b00
	load = 2'b10
Module <ps2_rx> is correct for synthesis.
 
Analyzing module <key_to_move> in library <work>.
	down = 32'sb00000000000000000000000000000011
	left = 32'sb00000000000000000000000000000010
	right = 32'sb00000000000000000000000000000000
	up = 32'sb00000000000000000000000000000001
Module <key_to_move> is correct for synthesis.
 
Analyzing module <Sync> in library <work>.
	BP_h = 32'sb00000000000000000000000010010000
	BP_v = 32'sb00000000000000000000000000100001
	FP_h = 32'sb00000000000000000000001100010000
	FP_v = 32'sb00000000000000000000001000000001
	h_px = 32'sb00000000000000000000001100100000
	v_ln = 32'sb00000000000000000000001000001100
Module <Sync> is correct for synthesis.
 
Analyzing module <snake_game> in library <work>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	H = 32'sb00000000000000000000000001000000
	V = 32'sb00000000000000000000000000100000
	addrBits = 32'sb00000000000000000000000000001011
	bg_color = 8'b10010010
	bg_index = 32'sb00000000000000000000000000000000
	coin_color = 8'b00111101
	coin_index = 32'sb00000000000000000000000000000010
	pos_x = 32'sb00000000000000000000000001000000
	pos_y = 32'sb00000000000000000000000001000000
	scale_x = 32'sb00000000000000000000000000001000
	scale_y = 32'sb00000000000000000000000000001000
	snake_color = 8'b11111111
	snake_head_color = 8'b11100011
	snake_head_index = 32'sb00000000000000000000000000000011
	snake_index = 32'sb00000000000000000000000000000001
	xBits = 32'sb00000000000000000000000000000110
	yBits = 32'sb00000000000000000000000000000101
WARNING:Xst:2211 - "ipcore_dir/screen_mem_i.v" line 100: Instantiating black box module <screen_mem_i>.
Module <snake_game> is correct for synthesis.
 
Analyzing module <snake> in library <work>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	H = 32'sb00000000000000000000000001000000
	V = 32'sb00000000000000000000000000100000
	addrBits = 32'sb00000000000000000000000000001011
	down = 32'sb00000000000000000000000000000011
	h_index = 32'sb00000000000000000000000000000011
	left = 32'sb00000000000000000000000000000010
	right = 32'sb00000000000000000000000000000000
	up = 32'sb00000000000000000000000000000001
	xBits = 32'sb00000000000000000000000000000110
	yBits = 32'sb00000000000000000000000000000101
WARNING:Xst:2211 - "ipcore_dir/snake_mem.v" line 96: Instantiating black box module <snake_mem>.
Module <snake> is correct for synthesis.
 
Analyzing module <StaticCounter> in library <work>.
	Calling function <logb2>.
	numLength = 32'sb00000000000000000000000000001011
	upTo = 32'sb00000000000000000000011111111111
Module <StaticCounter> is correct for synthesis.
 
Analyzing module <coin> in library <work>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	Calling function <logb2>.
	H = 32'sb00000000000000000000000001000000
	V = 32'sb00000000000000000000000000100000
Module <coin> is correct for synthesis.
 
Analyzing module <score_print> in library <work>.
	Calling function <logb2>.
	H = 32'sb00000000000000000000000001000000
	V = 32'sb00000000000000000000000000100000
	score_bits = 32'sb00000000000000000000000000001011
	size = 32'sb00000000000000000000000000000100
	spacing = 32'sb00000000000000000000000000000001
	width = 32'sb00000000000000000000000000001000
Module <score_print> is correct for synthesis.
 
Analyzing module <BoothsDiv> in library <work>.
	aBits = 12
	bBits = 11
	bits = 12
Module <BoothsDiv> is correct for synthesis.
 
Analyzing module <FromTwosComplement> in library <work>.
	bits = 32'sb00000000000000000000000000001100
Module <FromTwosComplement> is correct for synthesis.
 
Analyzing module <ToTwosComplement> in library <work>.
	bits = 32'sb00000000000000000000000000001100
Module <ToTwosComplement> is correct for synthesis.
 
Analyzing module <FontPrint> in library <work>.
	posBits = 32'sb00000000000000000000000000001010
Module <FontPrint> is correct for synthesis.
 
Analyzing module <font_rom> in library <work>.
Module <font_rom> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...

Synthesizing Unit <ClockRatio>.
    Related source file is "ClockRatio.v".
    Found 27-bit updown accumulator for signal <currrentCount>.
    Found 27-bit comparator greatequal for signal <currrentCount$cmp_ge0000> created at line 45.
    Found 1-bit register for signal <reClk>.
    Summary:
	inferred   1 Accumulator(s).
	inferred   1 D-type flip-flop(s).
	inferred   1 Comparator(s).
Unit <ClockRatio> synthesized.


Synthesizing Unit <ps2_rx>.
    Related source file is "ps2_rx.v".
    Found finite state machine <FSM_0> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 3                                              |
    | Transitions        | 6                                              |
    | Inputs             | 2                                              |
    | Outputs            | 3                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 11-bit register for signal <b_reg>.
    Found 1-bit register for signal <f_ps2c_reg>.
    Found 8-bit register for signal <filter_reg>.
    Found 4-bit subtractor for signal <n_next$addsub0000> created at line 103.
    Found 4-bit register for signal <n_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  24 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <ps2_rx> synthesized.


Synthesizing Unit <key_to_move>.
    Related source file is "key_to_move.v".
WARNING:Xst:647 - Input <reset> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 1-bit register for signal <move_enable>.
    Found 2-bit register for signal <move>.
    Found 2-bit register for signal <next_move>.
    Summary:
	inferred   5 D-type flip-flop(s).
Unit <key_to_move> synthesized.


Synthesizing Unit <Sync>.
    Related source file is "Sync.v".
    Found 10-bit up counter for signal <h>.
    Found 10-bit up counter for signal <v>.
    Found 10-bit up counter for signal <hc>.
    Found 10-bit comparator less for signal <hsync$cmp_lt0000> created at line 82.
    Found 11-bit comparator greatequal for signal <v$cmp_ge0000> created at line 108.
    Found 10-bit comparator lessequal for signal <v$cmp_le0000> created at line 108.
    Found 10-bit up counter for signal <vc>.
    Found 1-bit register for signal <venable>.
    Found 10-bit comparator greater for signal <von$cmp_gt0000> created at line 136.
    Found 10-bit comparator greater for signal <von$cmp_gt0001> created at line 136.
    Found 11-bit comparator less for signal <von$cmp_lt0000> created at line 136.
    Found 11-bit comparator less for signal <von$cmp_lt0001> created at line 136.
    Found 10-bit comparator less for signal <vsync$cmp_lt0000> created at line 121.
    Summary:
	inferred   4 Counter(s).
	inferred   1 D-type flip-flop(s).
	inferred   8 Comparator(s).
Unit <Sync> synthesized.


Synthesizing Unit <StaticCounter>.
    Related source file is "StaticCounter.v".
    Found 12-bit adder for signal <$add0000> created at line 47.
    Found 12-bit register for signal <prePowerOfTwoGen.internalCount>.
    Summary:
	inferred  12 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <StaticCounter> synthesized.


Synthesizing Unit <coin>.
    Related source file is "coin.v".
WARNING:Xst:647 - Input <snake_tail_x> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <snake_tail_y> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <snake_x> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <snake_y> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <snake_exists> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 1-bit register for signal <point>.
    Found 6-bit register for signal <x>.
    Found 5-bit register for signal <y>.
    Found 1-bit register for signal <exists>.
    Found 7-bit up accumulator for signal <count_x>.
    Found 7-bit comparator greater for signal <count_x$cmp_gt0000> created at line 58.
    Found 6-bit up accumulator for signal <count_y>.
    Found 6-bit comparator greater for signal <count_y$cmp_gt0000> created at line 62.
    Found 6-bit comparator not equal for signal <exists$cmp_ne0001> created at line 83.
    Found 5-bit comparator not equal for signal <exists$cmp_ne0002> created at line 83.
    Found 6-bit comparator equal for signal <point$cmp_eq0000> created at line 83.
    Found 5-bit comparator equal for signal <point$cmp_eq0001> created at line 83.
    Found 2-bit up counter for signal <state_count>.
    Summary:
	inferred   1 Counter(s).
	inferred   2 Accumulator(s).
	inferred  13 D-type flip-flop(s).
	inferred   6 Comparator(s).
Unit <coin> synthesized.


Synthesizing Unit <FromTwosComplement>.
    Related source file is "FromTwosComplement.v".
    Found 14-bit subtractor for signal <unComplement$sub0000> created at line 29.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <FromTwosComplement> synthesized.


Synthesizing Unit <ToTwosComplement>.
    Related source file is "ToTwosComplement.v".
    Found 12-bit adder for signal <complement>.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <ToTwosComplement> synthesized.


Synthesizing Unit <font_rom>.
    Related source file is "font_rom.v".
    Found 2048x8-bit ROM for signal <data>.
    Found 11-bit register for signal <addr_reg>.
    Summary:
	inferred   1 ROM(s).
	inferred  11 D-type flip-flop(s).
Unit <font_rom> synthesized.


Synthesizing Unit <snake>.
    Related source file is "snake.v".
WARNING:Xst:646 - Signal <previous_last_head<0>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <previous_body_count_enable> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
    Found 6-bit register for signal <snake_tail_x>.
    Found 5-bit register for signal <snake_tail_y>.
    Found 12-bit register for signal <last_head>.
    Found 1-bit register for signal <self_col>.
    Found 11-bit register for signal <addra>.
    Found 11-bit register for signal <addrb>.
    Found 1-bit register for signal <applyReset>.
    Found 1-bit register for signal <body_count_enable>.
    Found 11-bit comparator greatequal for signal <exists$cmp_ge0000> created at line 77.
    Found 12-bit register for signal <last_data>.
    Found 1-bit register for signal <next_wea>.
    Found 1-bit register for signal <next_write_active>.
    Found 11-bit comparator less for signal <next_write_active$cmp_lt0000> created at line 155.
    Found 6-bit register for signal <next_write_x>.
    Found 5-bit register for signal <next_write_y>.
    Found 12-bit register for signal <previous_last_head>.
    Found 6-bit subtractor for signal <read_x_m1>.
    Found 6-bit adder for signal <read_x_p1>.
    Found 5-bit subtractor for signal <read_y_m1>.
    Found 5-bit adder for signal <read_y_p1>.
    Found 11-bit comparator lessequal for signal <self_col$cmp_le0000> created at line 160.
    Found 12-bit comparator not equal for signal <self_col$cmp_ne0000> created at line 171.
    Found 1-bit register for signal <wea<0>>.
    Found 1-bit register for signal <write_active>.
    Found 6-bit register for signal <write_x>.
    Found 5-bit register for signal <write_y>.
    Summary:
	inferred  98 D-type flip-flop(s).
	inferred   4 Adder/Subtractor(s).
	inferred   4 Comparator(s).
Unit <snake> synthesized.


Synthesizing Unit <BoothsDiv>.
    Related source file is "BoothsDiv.v".
    Found 12-bit adder for signal <defaultCase.boothStep[10].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[11].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[1].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[2].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[3].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[4].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[5].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[6].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[7].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[8].cycleOp>.
    Found 12-bit adder for signal <defaultCase.boothStep[9].cycleOp>.
    Found 1-bit xor2 for signal <defaultCase.finalSign>.
    Found 12-bit adder for signal <defaultCase.fstCycleOp>.
    Found 12-bit adder for signal <defaultCase.preRemainder>.
    Found 12-bit adder for signal <pre_inv_b>.
    Found 12-bit adder for signal <remainder$addsub0000> created at line 70.
    Summary:
	inferred  15 Adder/Subtractor(s).
Unit <BoothsDiv> synthesized.


Synthesizing Unit <FontPrint>.
    Related source file is "FontPrint.v".
    Found 12-bit subtractor for signal <$sub0001> created at line 46.
    Found 12-bit comparator less for signal <address$cmp_lt0000> created at line 43.
    Found 10-bit comparator greatequal for signal <collision$cmp_ge0000> created at line 46.
    Found 12-bit comparator less for signal <collision$cmp_lt0000> created at line 46.
    Found 3-bit adder for signal <subsX>.
    Found 3-bit subtractor for signal <subsX$addsub0000> created at line 36.
    Found 4-bit adder for signal <subsY>.
    Summary:
	inferred   4 Adder/Subtractor(s).
	inferred   3 Comparator(s).
Unit <FontPrint> synthesized.


Synthesizing Unit <snake_game>.
    Related source file is "snake_game.v".
WARNING:Xst:653 - Signal <snake_tail_y> is used but never assigned. This sourceless signal will be automatically connected to value 00000.
WARNING:Xst:653 - Signal <snake_tail_x> is used but never assigned. This sourceless signal will be automatically connected to value 000000.
WARNING:Xst:646 - Signal <snake_head<0>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <previous_exist_tail> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <local_y<9:5>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <local_x<9:6>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
    Found finite state machine <FSM_1> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 5                                              |
    | Transitions        | 20                                             |
    | Inputs             | 3                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | synchronous                                    |
    | Reset State        | 000                                            |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 1-bit register for signal <color_valid>.
    Found 1-bit register for signal <clear_count_enable>.
    Found 10-bit comparator greatequal for signal <color_valid$cmp_ge0000> created at line 162.
    Found 10-bit comparator greatequal for signal <color_valid$cmp_ge0001> created at line 162.
    Found 10-bit comparator less for signal <color_valid$cmp_lt0000> created at line 162.
    Found 10-bit comparator less for signal <color_valid$cmp_lt0001> created at line 162.
    Found 11-bit up counter for signal <length>.
    Found 11-bit subtractor for signal <local_x$sub0000> created at line 126.
    Found 11-bit subtractor for signal <local_y$sub0000> created at line 127.
    Found 11-bit adder for signal <screen_read_address>.
    Found 11-bit register for signal <screen_write_address>.
    Found 11-bit adder for signal <screen_write_address$addsub0000>.
    Found 2-bit register for signal <screen_write_data>.
    Found 1-bit register for signal <screen_write_enable>.
    Found 1-bit register for signal <snake_shift>.
    Found 2-bit register for signal <test_counter>.
    Found 2-bit adder for signal <test_counter$addsub0000> created at line 227.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred   1 Counter(s).
	inferred  19 D-type flip-flop(s).
	inferred   5 Adder/Subtractor(s).
	inferred   4 Comparator(s).
Unit <snake_game> synthesized.


Synthesizing Unit <score_print>.
    Related source file is "score_print.v".
WARNING:Xst:646 - Signal <signed_remainder_a1<11:4>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <signed_a3<12:4>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <signed_a2<12:4>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <signed_a1<12:4>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
    Found 7-bit register for signal <char>.
    Found 6-bit adder for signal <char$add0000> created at line 116.
    Found 6-bit adder for signal <char$add0001> created at line 119.
    Found 6-bit adder for signal <char$add0002> created at line 122.
    Found 6-bit adder for signal <char$add0003> created at line 125.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0000> created at line 134.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0001> created at line 137.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0002> created at line 140.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0003> created at line 143.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0004> created at line 146.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0005> created at line 149.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0006> created at line 152.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0007> created at line 155.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0008> created at line 158.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0009> created at line 161.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0010> created at line 118.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0011> created at line 121.
    Found 10-bit comparator greatequal for signal <char$cmp_ge0012> created at line 124.
    Found 10-bit comparator less for signal <char$cmp_lt0000> created at line 131.
    Found 10-bit comparator less for signal <char$cmp_lt0001> created at line 134.
    Found 10-bit comparator less for signal <char$cmp_lt0002> created at line 137.
    Found 10-bit comparator less for signal <char$cmp_lt0003> created at line 140.
    Found 10-bit comparator less for signal <char$cmp_lt0004> created at line 143.
    Found 10-bit comparator less for signal <char$cmp_lt0005> created at line 146.
    Found 10-bit comparator less for signal <char$cmp_lt0006> created at line 149.
    Found 10-bit comparator less for signal <char$cmp_lt0007> created at line 152.
    Found 10-bit comparator less for signal <char$cmp_lt0008> created at line 155.
    Found 10-bit comparator less for signal <char$cmp_lt0009> created at line 158.
    Found 10-bit comparator less for signal <char$cmp_lt0010> created at line 161.
    Found 10-bit comparator less for signal <char$cmp_lt0011> created at line 118.
    Found 10-bit comparator less for signal <char$cmp_lt0012> created at line 121.
    Found 10-bit comparator less for signal <char$cmp_lt0013> created at line 124.
    Found 10-bit register for signal <posXChar>.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0000> created at line 124.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0001> created at line 121.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0002> created at line 118.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0003> created at line 115.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0004> created at line 112.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0005> created at line 109.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0006> created at line 106.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0007> created at line 103.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0008> created at line 100.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0009> created at line 97.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0010> created at line 94.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0011> created at line 91.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0012> created at line 88.
    Found 10-bit comparator greatequal for signal <posXChar$cmp_ge0013> created at line 85.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0000> created at line 124.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0001> created at line 121.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0002> created at line 118.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0003> created at line 115.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0004> created at line 112.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0005> created at line 109.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0006> created at line 106.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0007> created at line 103.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0008> created at line 100.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0009> created at line 97.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0010> created at line 94.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0011> created at line 91.
    Found 10-bit comparator less for signal <posXChar$cmp_lt0012> created at line 88.
    Found 11-bit subtractor for signal <subsX$sub0000> created at line 52.
    Found 11-bit subtractor for signal <subsY$sub0000> created at line 53.
    Summary:
	inferred  17 D-type flip-flop(s).
	inferred   6 Adder/Subtractor(s).
	inferred  54 Comparator(s).
Unit <score_print> synthesized.


Synthesizing Unit <top>.
    Related source file is "top.v".
WARNING:Xst:647 - Input <btn> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <sw<6:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:646 - Signal <refresh> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
    Found 1-bit register for signal <HSYNC>.
    Found 1-bit register for signal <VSYNC>.
    Found 10-bit adder for signal <eval_y>.
    Found 8-bit register for signal <outColor>.
    Found 1-bit register for signal <playing>.
    Found 11-bit register for signal <score_display>.
    Found 11-bit comparator less for signal <score_display$cmp_lt0000> created at line 139.
    Found 11-bit subtractor for signal <score_display$sub0000> created at line 142.
    Found 1-bit register for signal <vgaClk>.
    Found 1-bit register for signal <von_rnm0>.
    Summary:
	inferred  24 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
	inferred   1 Comparator(s).
Unit <top> synthesized.

INFO:Xst:1767 - HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.

=========================================================================
HDL Synthesis Report

Macro Statistics
# ROMs                                                 : 1
 2048x8-bit ROM                                        : 1
# Adders/Subtractors                                   : 74
 10-bit adder                                          : 1
 11-bit adder                                          : 2
 11-bit subtractor                                     : 5
 12-bit adder                                          : 50
 12-bit subtractor                                     : 1
 14-bit subtractor                                     : 3
 3-bit adder                                           : 1
 3-bit subtractor                                      : 1
 4-bit adder                                           : 1
 4-bit subtractor                                      : 1
 5-bit adder                                           : 1
 5-bit subtractor                                      : 1
 6-bit adder                                           : 5
 6-bit subtractor                                      : 1
# Counters                                             : 6
 10-bit up counter                                     : 4
 11-bit up counter                                     : 1
 2-bit up counter                                      : 1
# Accumulators                                         : 3
 27-bit updown accumulator                             : 1
 6-bit up accumulator                                  : 1
 7-bit up accumulator                                  : 1
# Registers                                            : 71
 1-bit register                                        : 46
 10-bit register                                       : 1
 11-bit register                                       : 6
 12-bit register                                       : 3
 2-bit register                                        : 3
 4-bit register                                        : 1
 5-bit register                                        : 4
 6-bit register                                        : 4
 7-bit register                                        : 1
 8-bit register                                        : 2
# Comparators                                          : 81
 10-bit comparator greatequal                          : 30
 10-bit comparator greater                             : 2
 10-bit comparator less                                : 31
 10-bit comparator lessequal                           : 1
 11-bit comparator greatequal                          : 2
 11-bit comparator less                                : 4
 11-bit comparator lessequal                           : 1
 12-bit comparator less                                : 2
 12-bit comparator not equal                           : 1
 27-bit comparator greatequal                          : 1
 5-bit comparator equal                                : 1
 5-bit comparator not equal                            : 1
 6-bit comparator equal                                : 1
 6-bit comparator greater                              : 1
 6-bit comparator not equal                            : 1
 7-bit comparator greater                              : 1
# Xors                                                 : 3
 1-bit xor2                                            : 3

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_1> for best encoding.
Optimizing FSM <snake_game_i/state/FSM> on signal <state[1:3]> with user encoding.
-------------------
 State | Encoding
-------------------
 000   | 000
 001   | 001
 010   | 010
 011   | 011
 100   | 100
-------------------
Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <keyboardCtrl/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
-------------------
Reading core <ipcore_dir/snake_mem.ngc>.
Reading core <ipcore_dir/screen_mem_i.ngc>.
Loading core <snake_mem> for timing and area information for instance <snake_mem_i>.
Loading core <screen_mem_i> for timing and area information for instance <snake_screen_mem>.
INFO:Xst:2261 - The FF/Latch <posXChar_7> in Unit <score_print_i> is equivalent to the following 2 FFs/Latches, which will be removed : <posXChar_8> <posXChar_9> 
WARNING:Xst:1710 - FF/Latch <posXChar_7> (without init value) has a constant value of 0 in block <score_print_i>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:2677 - Node <b_reg_0> of sequential type is unconnected in block <keyboardCtrl>.
WARNING:Xst:2677 - Node <previous_last_head_0> of sequential type is unconnected in block <snake_position>.
WARNING:Xst:2404 -  FFs/Latches <posXChar<9:7>> (without init value) have a constant value of 0 in block <score_print>.

Synthesizing (advanced) Unit <font_rom>.
INFO:Xst:3044 - The ROM <Mrom_data> will be implemented as a read-only BLOCK RAM, absorbing the register: <addr_reg>.
INFO:Xst:3225 - The RAM <Mrom_data> will be implemented as BLOCK RAM
    -----------------------------------------------------------------------
    | ram_type           | Block                               |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 2048-word x 8-bit                   |          |
    |     mode           | write-first                         |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to internal node          | high     |
    |     addrA          | connected to signal <addr>          |          |
    |     diA            | connected to internal node          |          |
    |     doA            | connected to signal <data>          |          |
    -----------------------------------------------------------------------
    | optimization       | speed                               |          |
    -----------------------------------------------------------------------
Unit <font_rom> synthesized (advanced).
WARNING:Xst:2677 - Node <b_reg_0> of sequential type is unconnected in block <ps2_rx>.
WARNING:Xst:2677 - Node <previous_last_head_0> of sequential type is unconnected in block <snake>.

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# FSMs                                                 : 2
# RAMs                                                 : 1
 2048x8-bit single-port block RAM                      : 1
# Adders/Subtractors                                   : 74
 10-bit adder                                          : 1
 11-bit adder                                          : 2
 11-bit subtractor                                     : 3
 12-bit adder                                          : 50
 12-bit subtractor                                     : 4
 3-bit adder                                           : 1
 3-bit subtractor                                      : 1
 4-bit adder                                           : 1
 4-bit subtractor                                      : 1
 5-bit adder                                           : 1
 5-bit subtractor                                      : 1
 6-bit adder                                           : 5
 6-bit subtractor                                      : 1
 8-bit subtractor                                      : 1
 9-bit subtractor                                      : 1
# Counters                                             : 6
 10-bit up counter                                     : 4
 11-bit up counter                                     : 1
 2-bit up counter                                      : 1
# Accumulators                                         : 3
 27-bit updown accumulator                             : 1
 6-bit up accumulator                                  : 1
 7-bit up accumulator                                  : 1
# Registers                                            : 219
 Flip-Flops                                            : 219
# Comparators                                          : 81
 10-bit comparator greatequal                          : 30
 10-bit comparator greater                             : 2
 10-bit comparator less                                : 31
 10-bit comparator lessequal                           : 1
 11-bit comparator greatequal                          : 2
 11-bit comparator less                                : 4
 11-bit comparator lessequal                           : 1
 12-bit comparator less                                : 2
 12-bit comparator not equal                           : 1
 27-bit comparator greatequal                          : 1
 5-bit comparator equal                                : 1
 5-bit comparator not equal                            : 1
 6-bit comparator equal                                : 1
 6-bit comparator greater                              : 1
 6-bit comparator not equal                            : 1
 7-bit comparator greater                              : 1
# Xors                                                 : 3
 1-bit xor2                                            : 3

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================

Optimizing unit <top> ...

Optimizing unit <ps2_rx> ...

Optimizing unit <key_to_move> ...

Optimizing unit <Sync> ...

Optimizing unit <StaticCounter> ...

Optimizing unit <coin> ...

Optimizing unit <FromTwosComplement> ...

Optimizing unit <ToTwosComplement> ...

Optimizing unit <snake> ...

Optimizing unit <BoothsDiv> ...

Optimizing unit <FontPrint> ...

Optimizing unit <snake_game> ...

Optimizing unit <score_print> ...
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_x_0> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_x_1> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_x_2> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_x_3> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_x_4> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_x_5> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_y_0> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_y_1> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_y_2> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_y_3> of sequential type is unconnected in block <top>.
WARNING:Xst:2677 - Node <snake_game_i/snake_position/snake_tail_y_4> of sequential type is unconnected in block <top>.

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block top, actual ratio is 62.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 306
 Flip-Flops                                            : 306

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Final Report                               *
=========================================================================
Final Results
RTL Top Level Output File Name     : top.ngr
Top Level Output File Name         : top
Output Format                      : NGC
Optimization Goal                  : Speed
Keep Hierarchy                     : No

Design Statistics
# IOs                              : 34

Cell Usage :
# BELS                             : 2144
#      GND                         : 3
#      INV                         : 80
#      LUT1                        : 184
#      LUT2                        : 316
#      LUT3                        : 107
#      LUT3_L                      : 3
#      LUT4                        : 350
#      LUT4_D                      : 1
#      LUT4_L                      : 8
#      MUXCY                       : 528
#      MUXF5                       : 44
#      VCC                         : 3
#      XORCY                       : 517
# FlipFlops/Latches                : 306
#      FD                          : 39
#      FDC                         : 25
#      FDE                         : 61
#      FDR                         : 75
#      FDRE                        : 90
#      FDRS                        : 1
#      FDS                         : 7
#      FDSE                        : 8
# RAMS                             : 4
#      RAMB16_S9                   : 1
#      RAMB16_S9_S9                : 3
# Clock Buffers                    : 2
#      BUFG                        : 1
#      BUFGP                       : 1
# IO Buffers                       : 22
#      IBUF                        : 3
#      OBUF                        : 19
=========================================================================

Device utilization summary:
---------------------------

Selected Device : 3s100ecp132-5 

 Number of Slices:                      559  out of    960    58%  
 Number of Slice Flip Flops:            304  out of   1920    15%  
 Number of 4 input LUTs:               1049  out of   1920    54%  
 Number of IOs:                          34
 Number of bonded IOBs:                  23  out of     83    27%  
    IOB Flip Flops:                       2
 Number of BRAMs:                         4  out of      4   100%  
 Number of GCLKs:                         2  out of     24     8%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
TIMING REPORT

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
mclk                               | BUFGP                  | 269   |
vgaClk1                            | BUFG                   | 41    |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
-----------------------------------+------------------------+-------+
Control Signal                     | Buffer(FF name)        | Load  |
-----------------------------------+------------------------+-------+
sw<7>                              | IBUF                   | 25    |
-----------------------------------+------------------------+-------+

Timing Summary:
---------------
Speed Grade: -5

   Minimum period: 105.968ns (Maximum Frequency: 9.437MHz)
   Minimum input arrival time before clock: 4.592ns
   Maximum output required time after clock: 4.547ns
   Maximum combinational path delay: No path found

Timing Detail:
--------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'mclk'
  Clock period: 105.968ns (frequency: 9.437MHz)
  Total number of paths / destination ports: 76988310106797438000000000000000000000 / 514
-------------------------------------------------------------------------
Delay:               105.968ns (Levels of Logic = 326)
  Source:            score_display_10 (FF)
  Destination:       score_print_i/char_3 (FF)
  Source Clock:      mclk rising
  Destination Clock: mclk rising

  Data Path: score_display_10 to score_print_i/char_3
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDR:C->Q              1   0.514   0.509  score_display_10 (score_display_10)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[1].cycleOp_cy<0>_rt (score_print_i/a3div/Madd_defaultCase.boothStep[1].cycleOp_cy<0>_rt)
     MUXCY:S->O            0   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[1].cycleOp_cy<0> (score_print_i/a3div/Madd_defaultCase.boothStep[1].cycleOp_cy<0>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a3div/Madd_defaultCase.boothStep[1].cycleOp_xor<1> (score_print_i/a3div/Madd_defaultCase.boothStep[2].cycleOp_lut<2>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[2].cycleOp_cy<2>_rt (score_print_i/a3div/Madd_defaultCase.boothStep[2].cycleOp_cy<2>_rt)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[2].cycleOp_cy<2> (score_print_i/a3div/Madd_defaultCase.boothStep[2].cycleOp_cy<2>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a3div/Madd_defaultCase.boothStep[2].cycleOp_xor<3> (score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_lut<4>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<4>_rt (score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<4>_rt)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_cy<8>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a3div/Madd_defaultCase.boothStep[3].cycleOp_xor<9> (score_print_i/a3div/Madd_defaultCase.boothStep[4].cycleOp_lut<10>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[4].cycleOp_cy<10>_rt (score_print_i/a3div/Madd_defaultCase.boothStep[4].cycleOp_cy<10>_rt)
     MUXCY:S->O            0   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[4].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[4].cycleOp_cy<10>)
     XORCY:CI->O           8   0.699   0.712  score_print_i/a3div/Madd_defaultCase.boothStep[4].cycleOp_xor<11> (score_print_i/a3div/defaultCase_boothStep[4]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_lut<4> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_lut<4>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<9> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_cy<10>)
     XORCY:CI->O           8   0.699   0.712  score_print_i/a3div/Madd_defaultCase.boothStep[5].cycleOp_xor<11> (score_print_i/a3div/defaultCase_boothStep[5]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_lut<4> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_lut<4>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<9> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_cy<10>)
     XORCY:CI->O           8   0.699   0.712  score_print_i/a3div/Madd_defaultCase.boothStep[6].cycleOp_xor<11> (score_print_i/a3div/defaultCase_boothStep[6]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_lut<4> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_lut<4>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<9> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_cy<10>)
     XORCY:CI->O           8   0.699   0.712  score_print_i/a3div/Madd_defaultCase.boothStep[7].cycleOp_xor<11> (score_print_i/a3div/defaultCase_boothStep[7]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_lut<4> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_lut<4>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<9> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a3div/Madd_defaultCase.boothStep[8].cycleOp_xor<11> (score_print_i/a3div/defaultCase_boothStep[8]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_lut<4> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_lut<4>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<9> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a3div/Madd_defaultCase.boothStep[9].cycleOp_xor<11> (score_print_i/a3div/defaultCase_boothStep[9]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_lut<4> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_lut<4>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<9> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a3div/Madd_defaultCase.boothStep[10].cycleOp_xor<11> (score_print_i/a3div/defaultCase_boothStep[10]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_lut<4> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_lut<4>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<4> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<5> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<6> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<7> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<8> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<9> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<10> (score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_cy<10>)
     XORCY:CI->O          11   0.699   0.862  score_print_i/a3div/Madd_defaultCase.boothStep[11].cycleOp_xor<11> (score_print_i/a3div/Madd_defaultCase.preRemainder_lut<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_lut<3> (score_print_i/a3div/Madd_defaultCase.preRemainder_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<3> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<4> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<5> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<6> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<7> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<8> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<9> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a3div/Madd_defaultCase.preRemainder_cy<10> (score_print_i/a3div/Madd_defaultCase.preRemainder_cy<10>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a3div/Madd_defaultCase.preRemainder_xor<11> (score_print_i/a2div/Madd_defaultCase.fstCycleOp_lut<0>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.fstCycleOp_cy<0>_rt (score_print_i/a2div/Madd_defaultCase.fstCycleOp_cy<0>_rt)
     MUXCY:S->O            0   0.404   0.000  score_print_i/a2div/Madd_defaultCase.fstCycleOp_cy<0> (score_print_i/a2div/Madd_defaultCase.fstCycleOp_cy<0>)
     XORCY:CI->O           1   0.699   0.357  score_print_i/a2div/Madd_defaultCase.fstCycleOp_xor<1> (score_print_i/a2div/defaultCase_fstCycleOp<1>)
     INV:I->O              1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[1].cycleOp_lut<2>1_INV_0 (score_print_i/a2div/Madd_defaultCase.boothStep[1].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[1].cycleOp_cy<2> (score_print_i/a2div/Madd_defaultCase.boothStep[1].cycleOp_cy<2>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a2div/Madd_defaultCase.boothStep[1].cycleOp_xor<3> (score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_lut<4>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<4>_rt (score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<4>_rt)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<5>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_cy<6>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a2div/Madd_defaultCase.boothStep[2].cycleOp_xor<7> (score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_lut<8>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<8>_rt (score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<8>_rt)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_cy<10>)
     XORCY:CI->O           9   0.699   0.766  score_print_i/a2div/Madd_defaultCase.boothStep[3].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[3]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_cy<10>)
     XORCY:CI->O           9   0.699   0.766  score_print_i/a2div/Madd_defaultCase.boothStep[4].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[4]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_cy<10>)
     XORCY:CI->O           9   0.699   0.766  score_print_i/a2div/Madd_defaultCase.boothStep[5].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[5]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_cy<10>)
     XORCY:CI->O           9   0.699   0.766  score_print_i/a2div/Madd_defaultCase.boothStep[6].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[6]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_cy<10>)
     XORCY:CI->O           9   0.699   0.766  score_print_i/a2div/Madd_defaultCase.boothStep[7].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[7]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_cy<10>)
     XORCY:CI->O          12   0.699   0.886  score_print_i/a2div/Madd_defaultCase.boothStep[8].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[8]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_cy<10>)
     XORCY:CI->O          11   0.699   0.862  score_print_i/a2div/Madd_defaultCase.boothStep[9].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[9]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_cy<10>)
     XORCY:CI->O          14   0.699   0.919  score_print_i/a2div/Madd_defaultCase.boothStep[10].cycleOp_xor<11> (score_print_i/a2div/defaultCase_boothStep[10]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_lut<3> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_lut<3>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<3> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<4> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<5> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<6> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<7> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<8> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<9> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<10> (score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_cy<10>)
     XORCY:CI->O           6   0.699   0.638  score_print_i/a2div/Madd_defaultCase.boothStep[11].cycleOp_xor<11> (score_print_i/a2div/Madd_defaultCase.preRemainder_lut<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_lut<2> (score_print_i/a2div/Madd_defaultCase.preRemainder_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<2> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<2>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<3> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<4> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<5> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<6> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<7> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<8> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<9> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a2div/Madd_defaultCase.preRemainder_cy<10> (score_print_i/a2div/Madd_defaultCase.preRemainder_cy<10>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a2div/Madd_defaultCase.preRemainder_xor<11> (score_print_i/a1div/Madd_defaultCase.fstCycleOp_lut<0>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<0>_rt (score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<0>_rt)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<0> (score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<0>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<1> (score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<1>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.fstCycleOp_cy<2>)
     XORCY:CI->O           1   0.699   0.509  score_print_i/a1div/Madd_defaultCase.fstCycleOp_xor<3> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_lut<4>)
     LUT1:I0->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<4>_rt (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<4>_rt)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a1div/Madd_defaultCase.boothStep[1].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[1]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a1div/Madd_defaultCase.boothStep[2].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[2]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a1div/Madd_defaultCase.boothStep[3].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[3]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a1div/Madd_defaultCase.boothStep[4].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[4]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a1div/Madd_defaultCase.boothStep[5].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[5]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a1div/Madd_defaultCase.boothStep[6].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[6]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_cy<10>)
     XORCY:CI->O          10   0.699   0.819  score_print_i/a1div/Madd_defaultCase.boothStep[7].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[7]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_cy<10>)
     XORCY:CI->O          13   0.699   0.905  score_print_i/a1div/Madd_defaultCase.boothStep[8].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[8]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_cy<10>)
     XORCY:CI->O          12   0.699   0.886  score_print_i/a1div/Madd_defaultCase.boothStep[9].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[9]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_cy<10>)
     XORCY:CI->O          13   0.699   0.905  score_print_i/a1div/Madd_defaultCase.boothStep[10].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[10]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_lut<2> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_lut<2>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<2> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<2>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<3> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<3>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<4> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<4>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<5> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<5>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<6> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<6>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<7> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<7>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<8> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<8>)
     MUXCY:CI->O           1   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<9> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<9>)
     MUXCY:CI->O           0   0.051   0.000  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<10> (score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_cy<10>)
     XORCY:CI->O           4   0.699   0.568  score_print_i/a1div/Madd_defaultCase.boothStep[11].cycleOp_xor<11> (score_print_i/a1div/defaultCase_boothStep[11]_cycleOp<11>)
     LUT2:I1->O            1   0.612   0.000  score_print_i/a1div/Madd_defaultCase.preRemainder_lut<1> (score_print_i/a1div/Madd_defaultCase.preRemainder_lut<1>)
     MUXCY:S->O            1   0.404   0.000  score_print_i/a1div/Madd_defaultCase.preRemainder_cy<1> (score_print_i/a1div/Madd_defaultCase.preRemainder_cy<1>)
     MUXCY:CI->O           0   0.052   0.000  score_print_i/a1div/Madd_defaultCase.preRemainder_cy<2> (score_print_i/a1div/Madd_defaultCase.preRemainder_cy<2>)
     XORCY:CI->O           2   0.699   0.383  score_print_i/a1div/Madd_defaultCase.preRemainder_xor<3> (score_print_i/a1div/defaultCase_preRemainder<3>)
     LUT4:I3->O            1   0.612   0.360  score_print_i/char_mux0000<3>139 (score_print_i/char_mux0000<3>139)
     LUT4:I3->O            1   0.612   0.000  score_print_i/char_mux0000<3>233 (score_print_i/char_mux0000<3>)
     FD:D                      0.268          score_print_i/char_3
    ----------------------------------------
    Total                    105.968ns (77.991ns logic, 27.977ns route)
                                       (73.6% logic, 26.4% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'vgaClk1'
  Clock period: 5.497ns (frequency: 181.914MHz)
  Total number of paths / destination ports: 1090 / 111
-------------------------------------------------------------------------
Delay:               5.497ns (Levels of Logic = 4)
  Source:            vgaDriver/vc_8 (FF)
  Destination:       vgaDriver/v_9 (FF)
  Source Clock:      vgaClk1 rising
  Destination Clock: vgaClk1 rising

  Data Path: vgaDriver/vc_8 to vgaDriver/v_9
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDRE:C->Q             5   0.514   0.607  vgaDriver/vc_8 (vgaDriver/vc_8)
     LUT3:I1->O            1   0.612   0.509  vgaDriver/von_cmp_gt000112 (vgaDriver/von_cmp_gt000112)
     LUT3:I0->O            3   0.612   0.520  vgaDriver/von_cmp_gt0001113 (vgaDriver/von_cmp_gt00012)
     LUT3:I1->O            1   0.612   0.000  vgaDriver/v_not000112 (vgaDriver/v_not000111)
     MUXF5:I0->O          10   0.278   0.750  vgaDriver/v_not00011_f5 (vgaDriver/v_not0001)
     FDRE:CE                   0.483          vgaDriver/v_0
    ----------------------------------------
    Total                      5.497ns (3.111ns logic, 2.386ns route)
                                       (56.6% logic, 43.4% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'mclk'
  Total number of paths / destination ports: 151 / 151
-------------------------------------------------------------------------
Offset:              4.592ns (Levels of Logic = 2)
  Source:            sw<7> (PAD)
  Destination:       snake_game_i/snake_position/body_count_enable (FF)
  Destination Clock: mclk rising

  Data Path: sw<7> to snake_game_i/snake_position/body_count_enable
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           103   1.106   1.244  sw_7_IBUF (sw_7_IBUF)
     LUT2:I0->O           13   0.612   0.836  snake_game_i/snake_position/_or00001 (snake_game_i/snake_position/_or0000)
     FDRE:R                    0.795          snake_game_i/snake_position/body_count_enable
    ----------------------------------------
    Total                      4.592ns (2.513ns logic, 2.079ns route)
                                       (54.7% logic, 45.3% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'mclk'
  Total number of paths / destination ports: 18 / 18
-------------------------------------------------------------------------
Offset:              4.547ns (Levels of Logic = 1)
  Source:            keyboardCtrl/b_reg_3 (FF)
  Destination:       Led<2> (PAD)
  Source Clock:      mclk rising

  Data Path: keyboardCtrl/b_reg_3 to Led<2>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q             15   0.514   0.864  keyboardCtrl/b_reg_3 (keyboardCtrl/b_reg_3)
     OBUF:I->O                 3.169          Led_2_OBUF (Led<2>)
    ----------------------------------------
    Total                      4.547ns (3.683ns logic, 0.864ns route)
                                       (81.0% logic, 19.0% route)

=========================================================================


Total REAL time to Xst completion: 14.00 secs
Total CPU time to Xst completion: 14.80 secs
 
--> 

Total memory usage is 296448 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :   50 (   0 filtered)
Number of infos    :    4 (   0 filtered)

